{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACiBI,IACjBC,YAAW,KACTD,EAAQ,C,SAAEN,E,MAAUC,GAAQ,GAC3BA,EAAM,EAGQ,CAACK,EAASE,KAC3BD,YAAW,KACTC,EAAO,C,SAAER,E,MAAUC,GAAQ,GAC1BA,EAAM,E,EA7CF,CACXQ,IAAKC,SAASC,cAAc,kBAC5BC,KAAMF,SAASC,cAAc,WAG1BC,KAAKC,iBAAiB,UAE3B,SAAoBC,GAClBA,EAAMC,iBACN,MAAMC,EAAQF,EAAMG,OAAOC,SAErBC,EAAOC,OAAOJ,EAAMG,KAAKE,OACzBC,EAASF,OAAOJ,EAAMM,OAAOD,OACnC,IAAIE,EAAeH,OAAOJ,EAAMf,MAAMoB,OAEtCG,EAAA3B,GAAS4B,OAAOC,KAAK,6BAEC,IAAjB,IAAIC,EAAW,EAAGA,GAAYL,EAAQK,IAAYJ,GAAgBJ,EAIrEpB,EAAc4B,EAAUJ,GACrBK,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MAEjBuB,EAAA3B,GAAS4B,OAAOI,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAEzE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAElBuB,EAAA3B,GAAS4B,OAAOM,QAAQ,sBAAoB/B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  btn: document.querySelector('.form > button'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onBtnClick);\n\nfunction onBtnClick(event) {\n  event.preventDefault();\n  const input = event.target.elements;\n\n  const step = Number(input.step.value);\n  const amount = Number(input.amount.value);\n  let promiseDelay = Number(input.delay.value);\n\n  Notiflix.Notify.info('Зараз буде черга Промісів');\n\n  for (let position = 1; position <= amount; position++, promiseDelay += step) {\n    // console.log('position', position);\n    // console.log('amount', amount);\n    // console.log('promiseDelay', promiseDelay);\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    });\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","setTimeout","reject","btn","document","querySelector","form","addEventListener","event","preventDefault","input","target","elements","step","Number","value","amount","promiseDelay","$parcel$interopDefault","Notify","info","position1","then","success","catch","failure"],"version":3,"file":"03-promises.d680bc54.js.map"}